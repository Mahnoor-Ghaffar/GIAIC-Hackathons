{"mappings":"AAAA,6CAA6C;AAC7C,SAAS,cAAc,CAAC,eAAe,iBAAiB,UAAU,SAAS,KAAkB;IACzF,MAAM,cAAc;IAEpB,sCAAsC;IAEtC,MAAM,sBAAsB,SAAS,cAAc,CAAC;IACpD,MAAM,cAAc,SAAS,cAAc,CAAC;IAC5C,MAAM,eAAe,SAAS,cAAc,CAAC;IAC7C,MAAM,eAAe,SAAS,cAAc,CAAC;IAC7C,MAAM,mBAAmB,SAAS,cAAc,CAAC;IACjD,MAAM,oBAAoB,SAAS,cAAc,CAAC;IAClD,MAAM,gBAAgB,SAAS,cAAc,CAAC;IAE9C,MAAM,kBAAkB,SAAS,cAAc,CAAC;IAEhD,IAAI,uBAAuB,eACpB,gBAAgB,gBAChB,oBAAoB,qBACnB,iBAAiB,iBAAiB;QACtC,MAAM,OAAO,YAAY,KAAK;QAC9B,MAAM,QAAQ,aAAa,KAAK;QAChC,MAAM,QAAQ,aAAa,KAAK;QAChC,MAAM,YAAY,iBAAiB,KAAK;QACxC,MAAM,aAAa,kBAAkB,KAAK;QAC1C,MAAM,SAAS,cAAc,KAAK;QAElC,GAAG;QACH,MAAM,WAAW,gBAAgB,KAAK;QACtC,MAAM,aAAa,CAAC,QAAQ,EAAE,SAAS,OAAO,CAAC,QAAO,KAAK,QAAQ,CAAC;QAEpE,iBAAiB;QACjB,MAAM,qBAAqB,oBAAoB,KAAK,EAAE,CAAC,EAAE;QACzD,MAAM,oBAAoB,qBAAqB,IAAI,eAAe,CAAC,sBAAsB;QAEzF,gBAAgB;QAChB,MAAM,eAAe,CAAC;;YAElB,EAAE,oBAAoB,CAAC,UAAU,EAAE,kBAAkB,+CAA+C,CAAC,GAAG,GAAG;6EAC1C,EAAE,KAAK;+EACL,EAAE,MAAM;+EACR,EAAE,MAAM;;;oDAGnC,EAAE,UAAU;;;qDAGX,EAAE,WAAW;;;iDAGjB,EAAE,OAAO;QAClD,CAAC;QAED,OAAO;QACP,MAAM,QAAQ,SAAS,aAAa,CAAC;QACrC,MAAM,IAAI,GAAG,mCAAmC,mBAAmB;QACnE,MAAM,QAAQ,GAAG;QACjB,MAAM,WAAW,GAAE;QAEnB,gCAAgC;QAChC,MAAM,sBAAsB,SAAS,cAAc,CAAC;QACpD,IAAI,qBAAqB;YACrB,oBAAoB,SAAS,GAAG;YAChC,oBAAoB,WAAW,CAAC;YAChC,gBAAiB,iBAAiB;QACtC,OACI,QAAQ,KAAK,CAAC;IAEtB;AACJ;AAEA,8BAA8B;AAC9B,SAAS;IACL,MAAM,mBAAmB,SAAS,gBAAgB,CAAC;IAEnD,iBAAiB,OAAO,CAAC,CAAA;QACrB,QAAQ,gBAAgB,CAAC,SAAS;YAC9B,MAAM,iBAAiB;YACvB,MAAM,eAAe,eAAe,WAAW,IAAI;YAEnD,qBAAqB;YACrB,MAAM,QAAQ,SAAS,aAAa,CAAC;YACrC,MAAM,IAAI,GAAG;YACb,MAAM,KAAK,GAAG;YACd,MAAM,SAAS,CAAC,GAAG,CAAC;YAEpB,8CAA8C;YAC9C,MAAM,gBAAgB,CAAC,QAAQ;gBAC3B,eAAe,WAAW,GAAG,MAAM,KAAK;gBACxC,eAAe,KAAK,CAAC,UAAU,GAAG;gBAClC,MAAM,MAAM;YAChB;YAEA,2BAA2B;YAC3B,MAAM,gBAAgB,CAAC,WAAW,SAAS,KAAK;gBAC5C,IAAI,MAAM,GAAG,KAAK,SAAS;oBACvB,eAAe,WAAW,GAAG,MAAM,KAAK;oBACxC,eAAe,KAAK,CAAC,UAAU,GAAG;oBAClC,MAAM,MAAM;gBAChB;YACJ;YAEA,4CAA4C;YAC5C,eAAe,KAAK,CAAC,UAAU,GAAG;YAClC,eAAe,UAAU,EAAE,aAAa,OAAO;YAC/C,MAAM,KAAK;QACf;IACJ;AACJ","sources":["src/resume.ts"],"sourcesContent":["// Add event listener for the form submission\r\ndocument.getElementById('resumeForm')?.addEventListener('submit', function(event: SubmitEvent) {\r\n    event.preventDefault();\r\n\r\n    // Type assertion for each input field\r\n\r\n    const profilePictureInput = document.getElementById('profilePicture') as HTMLInputElement;\r\n    const nameElement = document.getElementById('name') as HTMLInputElement;\r\n    const emailElement = document.getElementById('email') as HTMLInputElement;\r\n    const phoneElement = document.getElementById('phone') as HTMLInputElement;\r\n    const educationElement = document.getElementById('education') as HTMLTextAreaElement;\r\n    const experienceElement = document.getElementById('experience') as HTMLTextAreaElement;\r\n    const skillsElement = document.getElementById('skills') as HTMLTextAreaElement;\r\n\r\n    const usernameElement = document.getElementById(\"username\") as HTMLInputElement;\r\n\r\n    if (profilePictureInput && nameElement \r\n        && emailElement && phoneElement \r\n        && educationElement && experienceElement\r\n         && skillsElement && usernameElement) {\r\n        const name = nameElement.value;\r\n        const email = emailElement.value;\r\n        const phone = phoneElement.value;\r\n        const education = educationElement.value;\r\n        const experience = experienceElement.value;\r\n        const skills = skillsElement.value;\r\n\r\n        // \r\n        const username = usernameElement.value;\r\n        const uniquePath = `resumes/${username.replace(/\\s+/g,' ')}_cv.html`\r\n\r\n        //Picture element\r\n        const profilePictureFile = profilePictureInput.files?.[0]\r\n        const profilePictureURL = profilePictureFile ? URL.createObjectURL(profilePictureFile) : '';\r\n\r\n        // resume output\r\n        const resumeOutput = `\r\n            <h1>Resume</h1>\r\n            ${profilePictureURL ? `<img src=\"${profilePictureURL}\" alt\"Proflie Picture\" class=\"profilePicture\" >` : \"\"}\r\n            <p><strong>Name:</strong> <span id=\"edit-name\" class=\"editable\"> ${name} </span> </p>\r\n            <p><strong>Email:</strong> <span id=\"edit-email\" class=\"editable\"> ${email} </span> </p>\r\n            <p><strong>Phone:</strong> <span id=\"edit-phone\" class=\"editable\"> ${phone} </span> </p>\r\n\r\n            <h3>Education</h3>\r\n            <p id=\"edit-education\" class=\"editable\">${education}</p>\r\n\r\n            <h3>Experience</h3>\r\n            <p id=\"edit-experience\" class=\"editable\">${experience}</p>\r\n\r\n            <h3>Skills</h3>\r\n            <p id=\"edit-skills\" class=\"editable\">${skills}</p>\r\n        `;\r\n\r\n        // path\r\n        const dLink = document.createElement('a')\r\n        dLink.href = 'data:text/html;charset= utf-8,' + encodeURIComponent(resumeOutput);\r\n        dLink.download = uniquePath;\r\n        dLink.textContent ='Download Your Resume'\r\n\r\n        // Output the resume to the page\r\n        const resumeOutputElement = document.getElementById('resumeOutput');\r\n        if (resumeOutputElement) {\r\n            resumeOutputElement.innerHTML = resumeOutput;\r\n            resumeOutputElement.appendChild(dLink)\r\n            makeEditable();  // Enable editing\r\n        } else {\r\n            console.error('Resume output element is missing');\r\n        }\r\n    }\r\n});\r\n\r\n// Make text editable on click\r\nfunction makeEditable() {\r\n    const editableElements = document.querySelectorAll('.editable');\r\n\r\n    editableElements.forEach(element => {\r\n        element.addEventListener('click', function () {\r\n            const currentElement = element as HTMLElement;\r\n            const currentValue = currentElement.textContent || '';\r\n\r\n            // Create input field\r\n            const input = document.createElement('input');\r\n            input.type = 'text';\r\n            input.value = currentValue;\r\n            input.classList.add('editing-input');\r\n\r\n            // Handle losing focus (when clicking outside)\r\n            input.addEventListener('blur', function() {\r\n                currentElement.textContent = input.value;\r\n                currentElement.style.visibility = 'visible';\r\n                input.remove();\r\n            });\r\n\r\n            // Handle 'Enter' key press\r\n            input.addEventListener('keydown', function(event) {\r\n                if (event.key === 'Enter') {\r\n                    currentElement.textContent = input.value;\r\n                    currentElement.style.visibility = 'visible';\r\n                    input.remove();\r\n                }\r\n            });\r\n\r\n            // Hide current element and show input field\r\n            currentElement.style.visibility = 'hidden';\r\n            currentElement.parentNode?.insertBefore(input, currentElement);\r\n            input.focus();\r\n        });\r\n    });\r\n}\r\n"],"names":[],"version":3,"file":"form.cce5b843.js.map","sourceRoot":"/__parcel_source_root/"}